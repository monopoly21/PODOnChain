/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IOrderRegistry,
  IOrderRegistryInterface,
} from "../../../src/ShipmentRegistry.sol/IOrderRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "courier",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "courierReward",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "shipmentId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "lineItems",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
    ],
    name: "releaseEscrowWithReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IOrderRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IOrderRegistryInterface {
    return new Interface(_abi) as IOrderRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IOrderRegistry {
    return new Contract(address, _abi, runner) as unknown as IOrderRegistry;
  }
}
