/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export interface EscrowPYUSDInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "escrowed"
      | "fund"
      | "orderRegistry"
      | "refund"
      | "release"
      | "setOrderRegistry"
      | "token"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "EscrowFunded" | "EscrowRefunded" | "EscrowReleased"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "escrowed",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "fund",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "orderRegistry",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "refund",
    values: [BigNumberish, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "release",
    values: [BigNumberish, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setOrderRegistry",
    values: [AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "token", values?: undefined): string;

  decodeFunctionResult(functionFragment: "escrowed", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "fund", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "orderRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "refund", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "release", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setOrderRegistry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "token", data: BytesLike): Result;
}

export namespace EscrowFundedEvent {
  export type InputTuple = [
    orderId: BigNumberish,
    payer: AddressLike,
    amount: BigNumberish
  ];
  export type OutputTuple = [orderId: bigint, payer: string, amount: bigint];
  export interface OutputObject {
    orderId: bigint;
    payer: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EscrowRefundedEvent {
  export type InputTuple = [
    orderId: BigNumberish,
    payee: AddressLike,
    amount: BigNumberish
  ];
  export type OutputTuple = [orderId: bigint, payee: string, amount: bigint];
  export interface OutputObject {
    orderId: bigint;
    payee: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace EscrowReleasedEvent {
  export type InputTuple = [
    orderId: BigNumberish,
    payee: AddressLike,
    amount: BigNumberish
  ];
  export type OutputTuple = [orderId: bigint, payee: string, amount: bigint];
  export interface OutputObject {
    orderId: bigint;
    payee: string;
    amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface EscrowPYUSD extends BaseContract {
  connect(runner?: ContractRunner | null): EscrowPYUSD;
  waitForDeployment(): Promise<this>;

  interface: EscrowPYUSDInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  escrowed: TypedContractMethod<[arg0: BigNumberish], [bigint], "view">;

  fund: TypedContractMethod<
    [orderId: BigNumberish, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  orderRegistry: TypedContractMethod<[], [string], "view">;

  refund: TypedContractMethod<
    [orderId: BigNumberish, buyer: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  release: TypedContractMethod<
    [orderId: BigNumberish, supplier: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  setOrderRegistry: TypedContractMethod<
    [_orderRegistry: AddressLike],
    [void],
    "nonpayable"
  >;

  token: TypedContractMethod<[], [string], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "escrowed"
  ): TypedContractMethod<[arg0: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "fund"
  ): TypedContractMethod<
    [orderId: BigNumberish, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "orderRegistry"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "refund"
  ): TypedContractMethod<
    [orderId: BigNumberish, buyer: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "release"
  ): TypedContractMethod<
    [orderId: BigNumberish, supplier: AddressLike, amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setOrderRegistry"
  ): TypedContractMethod<[_orderRegistry: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "token"
  ): TypedContractMethod<[], [string], "view">;

  getEvent(
    key: "EscrowFunded"
  ): TypedContractEvent<
    EscrowFundedEvent.InputTuple,
    EscrowFundedEvent.OutputTuple,
    EscrowFundedEvent.OutputObject
  >;
  getEvent(
    key: "EscrowRefunded"
  ): TypedContractEvent<
    EscrowRefundedEvent.InputTuple,
    EscrowRefundedEvent.OutputTuple,
    EscrowRefundedEvent.OutputObject
  >;
  getEvent(
    key: "EscrowReleased"
  ): TypedContractEvent<
    EscrowReleasedEvent.InputTuple,
    EscrowReleasedEvent.OutputTuple,
    EscrowReleasedEvent.OutputObject
  >;

  filters: {
    "EscrowFunded(uint256,address,uint256)": TypedContractEvent<
      EscrowFundedEvent.InputTuple,
      EscrowFundedEvent.OutputTuple,
      EscrowFundedEvent.OutputObject
    >;
    EscrowFunded: TypedContractEvent<
      EscrowFundedEvent.InputTuple,
      EscrowFundedEvent.OutputTuple,
      EscrowFundedEvent.OutputObject
    >;

    "EscrowRefunded(uint256,address,uint256)": TypedContractEvent<
      EscrowRefundedEvent.InputTuple,
      EscrowRefundedEvent.OutputTuple,
      EscrowRefundedEvent.OutputObject
    >;
    EscrowRefunded: TypedContractEvent<
      EscrowRefundedEvent.InputTuple,
      EscrowRefundedEvent.OutputTuple,
      EscrowRefundedEvent.OutputObject
    >;

    "EscrowReleased(uint256,address,uint256)": TypedContractEvent<
      EscrowReleasedEvent.InputTuple,
      EscrowReleasedEvent.OutputTuple,
      EscrowReleasedEvent.OutputObject
    >;
    EscrowReleased: TypedContractEvent<
      EscrowReleasedEvent.InputTuple,
      EscrowReleasedEvent.OutputTuple,
      EscrowReleasedEvent.OutputObject
    >;
  };
}
